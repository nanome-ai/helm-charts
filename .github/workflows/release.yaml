name: Release Charts

on:
  push:
    branches:
      - master

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Install Helm
        uses: azure/setup-helm@v1
        with:
          version: v3.8.1

      - name: Release Lib
        uses: helm/chart-releaser-action@v1.4.0
        with:
          charts_dir: nanome/plugins/lib
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        run: |
          plugin_folders="./nanome/plugins*"
          for fold in plugin_folders; do
            owner=$(cut -d '/' -f 1 <<< "$GITHUB_REPOSITORY")
            repo=$(cut -d '/' -f 2 <<< "$GITHUB_REPOSITORY")
            args=(--owner "$owner" --repo "$repo")
            args+=(--charts-repo-url "${{ fold }}")

            args+=(--charts-dir "${{ inputs.charts_dir }}")
            if [[ -n "${{ inputs.version }}" ]]; then
                args+=(--version "${{ inputs.version }}")
            fi
            if [[ -n "${{ inputs.config }}" ]]; then
                args+=(--config "${{ inputs.config }}")
            fi
            if [[ -z "${{ inputs.install_dir }}" ]]; then
              install="$RUNNER_TOOL_CACHE/cr/${{ inputs.version }}/$(uname -m)"
              echo "$install" >> "$GITHUB_PATH"
              args+=(--install-dir "$install")
            else
              echo ${{ inputs.install_dir }} >> "$GITHUB_PATH"
              args+=(--install-dir "${{ inputs.install_dir }}")
            fi
            if [[ -n "${{ inputs.install_only }}" ]]; then
                args+=(--install-only "${{ inputs.install_only }}")
            fi
            "$GITHUB_ACTION_PATH/cr.sh" "${args[@]}"
          done


      - name: Release Stacks
        uses: helm/chart-releaser-action@v1.4.0
        with:
          charts_dir: nanome/starter-stack
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
